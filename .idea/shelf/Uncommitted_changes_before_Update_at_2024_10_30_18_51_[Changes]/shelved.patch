Index: utils/preprocessor.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\n模型预处理方法，看dataloader里面写的多不多，多的话就分一下\r\n\"\"\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/utils/preprocessor.py b/utils/preprocessor.py
--- a/utils/preprocessor.py	(revision 9bad45637b12eff2792f0bef9123de0c6815834e)
+++ b/utils/preprocessor.py	(date 1730252245175)
@@ -1,3 +1,68 @@
+"""模型预处理方法:
+1.给dataloader的预处理器 a.输入模型数据进行符合尺度的裁剪
+2.数据集用的数据增强方法 对图像数据进行:a.
+3.原始数据的处理方法 a.加噪 b.复杂环境融合 c.滤波
 """
-模型预处理方法，看dataloader里面写的多不多，多的话就分一下
-"""
\ No newline at end of file
+
+import numpy as np
+import cv2
+import albumentations as A
+import os
+
+
+"""Augmentations for image data augmentation
+All the augmentations methods are provided by albumentations: https://github.com/albumentations-team/albumentations
+
+arg: 
+    dataset_path(str): the file path of dataset
+    methods(list[str]): the augmentation method.
+    output_path(str): output path
+"""
+
+
+def data_augmentation(dataset_path, methods, output_path):
+    output_path += 'dataset_aug'
+
+    total_path = [
+        os.path.join(dataset_path, 'train'),
+        os.path.join(dataset_path, 'valid'),
+    ]
+
+    if not os.path.exists(output_path):
+        os.mkdir(output_path)
+
+    for path in total_path:
+        _ = os.path.join(output_path, path.split('/')[-1])
+        if not os.path.exists(_):
+            os.mkdir(_)
+
+        images = os.listdir(path)
+        i = 0
+        for method in methods:
+            for image in images:
+                original_image = cv2.cvtColor(cv2.imread(os.path.join(path, image)), cv2.COLOR_BGR2RGB)
+                transform = A.Compose(method)
+                augmented = transform(image=original_image)
+                cv2.imwrite(os.path.join(_, image+'_AugM'+str(i)+os.path.splitext(image)[1]), augmented['image'])
+                cv2.imwrite(os.path.join(_, image+'_origin'+os.path.splitext(image)[1]), original_image)
+            i += 1
+
+
+def show_image(image):
+    cv2.namedWindow('Image', cv2.WINDOW_NORMAL)
+    cv2.resizeWindow('Image', 800, 600)
+    cv2.imshow('Image', image)
+    cv2.waitKey(0)
+    cv2.destroyAllWindows()
+
+
+def main():
+    data_path = "E:/Drone_dataset/RFUAV/augmentation_exp1_MethodSelect/dataset/"
+    output_path = "E:/Drone_dataset/RFUAV/augmentation_exp1_MethodSelect/res/"
+    methods = [A.HorizontalFlip(p=0.5), A.RandomBrightnessContrast(p=0.2),]
+    data_augmentation(data_path, methods, output_path)
+
+
+# test
+if __name__ == '__main__':
+    main()
Index: tool/graphic/iq.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tool/graphic/iq.py b/tool/graphic/iq_reader.py
rename from tool/graphic/iq.py
rename to tool/graphic/iq_reader.py
--- a/tool/graphic/iq.py	(revision 9bad45637b12eff2792f0bef9123de0c6815834e)
+++ b/tool/graphic/iq_reader.py	(date 1730256822526)
@@ -11,16 +11,8 @@
 duration_time = 0.1
 slice_point = int(fs * duration_time)
 
-# 給批量畫圖用的路徑
-fig_save_path = 'E:/Drone_dataset/RFUAV/pics_exp1_alldrones/'
-file_path = 'E:/Drone_dataset/RFUAV/rawdata/'
-
-# 給check用的路徑
-datapack = 'E:/Drone_dataset/RFUAV/rawdata/DJFPVCOMBO/DJFPVCOMBO-16db-90db_5760m_100m_10m.iq'
 
-
-def check_spectrum():
-    drone_name = 'temp'
+def check_spectrum(datapack, drone_name='Default'):
     with open(datapack, 'rb') as fp:
 
         print("reading raw data...")
@@ -33,39 +25,6 @@
         f, t, Zxx = stft(data[0: slice_point],
                                fs, window=windows.hamming(stft_point), nperseg=stft_point, return_onesided=False)
 
-        '''
-        f_I, t_I, Zxx_I = stft(dataI[0: slice_point],
-                               fs, window=windows.hamming(stft_point), nperseg=stft_point, noverlap=stft_point//2)
-
-
-        f_Q, t_Q, Zxx_Q = stft(dataQ[0: slice_point],
-                               fs, window=windows.hamming(stft_point), nperseg=stft_point, noverlap=stft_point // 2)
-        
-        
-        print('Drawing')
-        # I部分數據的時頻圖
-        plt.figure()
-        aug_I = 10 * np.log10(np.abs(Zxx_I))
-        plt.pcolormesh(t_I, f_I, np.abs(aug_I), cmap='jet')
-        plt.title(drone_name + " I")
-        plt.xlabel('Time (s)')
-        plt.ylabel('Frequency (Hz)')
-        # plt.savefig(fig_save_path + drone_name + 'spectrum.png')
-        plt.show()
-        print("figure I done")
-
-        # Q部分數據的時頻圖
-        plt.figure()
-        aug_Q = 10 * np.log10(np.abs(Zxx_Q))
-        plt.pcolormesh(t_Q, f_Q, np.abs(aug_Q), cmap='jet')
-        plt.title(drone_name + " Q")
-        plt.xlabel('Time (s)')
-        plt.ylabel('Frequency (Hz)')
-        # plt.savefig(fig_save_path + drone_name + 'spectrum.png')
-        plt.show()
-        print("figure Q done")
-        '''
-
         # 完整的時頻圖
 
         f = np.fft.fftshift(f)
@@ -76,9 +35,6 @@
 
         extent = [t.min(), t.max(), f.min(), f.max()]
         plt.imshow(aug, extent=extent, aspect='auto', origin='lower', cmap='jet')
-
-        # plt.pcolormesh(t, f, np.abs(aug), cmap='jet')
-
         plt.title(drone_name)
         plt.xlabel('Time (s)')
         plt.ylabel('Frequency (Hz)')
@@ -87,8 +43,7 @@
         print("figure done")
 
 
-
-def DrawandSave():
+def DrawandSave(file_path, fig_save_path):
         re_files = os.listdir(file_path)
         for file in re_files:
             packlist = os.listdir(file_path + file)
@@ -127,8 +82,15 @@
 
 
 def main():
-    check_spectrum()
-    # DrawandSave()
+    # 給check用的路徑
+    datapack = 'E:/Drone_dataset/RFUAV/rawdata/DJFPVCOMBO/DJFPVCOMBO-16db-90db_5760m_100m_10m.iq'
+
+    # 給批量畫圖用的路徑
+    fig_save_path = 'E:/Drone_dataset/RFUAV/pics_exp1_alldrones/'
+    file_path = 'E:/Drone_dataset/RFUAV/rawdata/'
+
+    check_spectrum(datapack)
+    # DrawandSave(file_path, fig_save_path)
 
 
 if __name__ == '__main__':
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"openmmlab\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"openmmlab\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 9bad45637b12eff2792f0bef9123de0c6815834e)
+++ b/.idea/misc.xml	(date 1730201895246)
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="openmmlab" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="openmmlab" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="RFUAV" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/RFUAV.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/RFUAV.iml b/.idea/RFUAV.iml
--- a/.idea/RFUAV.iml	(revision 9bad45637b12eff2792f0bef9123de0c6815834e)
+++ b/.idea/RFUAV.iml	(date 1730201895243)
@@ -2,7 +2,7 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="RFUAV" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: tool/Sep_sec.m
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>%% 依据需要的时间来分割大数据文件\r\nclc;clear;close all;\r\nfs = 100e6;                     % 输入采样率\r\nfftpoint = 8192;\r\ntime_sec = 2;                   % 需要的分割时间/s\r\ndataform = 'float32';           % 输入的数据类型\r\nbyte_per = 4;                   % 该数据类型占字节数\r\ndatalength = time_sec*fs*byte_per*2;       % 读取数据的长度，单位是字节(时间*采样率*每个数据占字节*iq)\r\nfile_input =\"E:\\DataBase\\DJFPVCOMBO\\DJFPVCOMBO-41db-90db_5760m_100m_20m.iq\";% 输入路径\r\n[filepath, name, ~] = fileparts(file_input); % 获取路径、文件名和后缀名，在原路径创建文件夹存放分割后数据\r\nfilepath = filepath + '\\' + name;\r\nif ~exist(filepath,\"dir\")\r\n    mkdir(filepath);\r\nelse\r\n    disp(\"文件夹已经存在!\");\r\nend\r\n% 读取文件,获取大小\r\nfp = fopen(file_input, 'rb'); \r\nfseek(fp, 0, 1);\r\nfileSize = ftell(fp);\r\nfclose(fp);\r\nreadtime = ceil(fileSize/datalength);\r\n\r\n%% 分次读取文件保存\r\nfor i =1:readtime\r\n    tic\r\n    fp = fopen(file_input, 'rb'); \r\n    fseek(fp,(i-1)*datalength,-1);\r\n    data = fread(fp,datalength/4,dataform);\r\n    fclose(fp);\r\n    newFile = fullfile(filepath, name + '_' + num2str(i*2-2) + '-' + num2str(i*2) + 's.dat'); % 生成新的文件路径和文件名\r\n    fp_write = fopen(newFile,\"wb+\");\r\n    fwrite(fp_write,data,dataform);\r\n    fclose(fp_write);\r\n    toc\r\nend
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tool/Sep_sec.m b/tool/Sep_sec.m
--- a/tool/Sep_sec.m	(revision 9bad45637b12eff2792f0bef9123de0c6815834e)
+++ b/tool/Sep_sec.m	(date 1730269721092)
@@ -6,7 +6,7 @@
 dataform = 'float32';           % 输入的数据类型
 byte_per = 4;                   % 该数据类型占字节数
 datalength = time_sec*fs*byte_per*2;       % 读取数据的长度，单位是字节(时间*采样率*每个数据占字节*iq)
-file_input ="E:\DataBase\DJFPVCOMBO\DJFPVCOMBO-41db-90db_5760m_100m_20m.iq";% 输入路径
+file_input ="E:/Drone_dataset/RFUAV/rawdata/DJMINI3/KONG-60db_2470m_100m.iq";% 输入路径
 [filepath, name, ~] = fileparts(file_input); % 获取路径、文件名和后缀名，在原路径创建文件夹存放分割后数据
 filepath = filepath + '\' + name;
 if ~exist(filepath,"dir")
diff --git a/tool/graphic/dat.py b/tool/graphic/dat_reader.py
rename from tool/graphic/dat.py
rename to tool/graphic/dat_reader.py
diff --git a/tool/graphic/mat.py b/tool/graphic/mat_reader.py
rename from tool/graphic/mat.py
rename to tool/graphic/mat_reader.py
