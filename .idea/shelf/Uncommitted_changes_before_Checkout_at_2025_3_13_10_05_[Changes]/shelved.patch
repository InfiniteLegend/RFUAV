Index: train.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># A train sample code\r\nfrom utils.trainer import CustomTrainer\r\n# from utils.trainer import DetTrainer\r\n\r\n\r\ndef main():\r\n    model = CustomTrainer(cfg='./configs/exp3.10_vit_l_16.yaml')\r\n    model.train()\r\n\r\n    # save_dir = ''\r\n    # train a custom signal detect model\r\n    # model = DetTrainer(model_name='yolo')\r\n    # model.train(save_dir=save_dir)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/train.py b/train.py
--- a/train.py	
+++ b/train.py	
@@ -4,7 +4,7 @@
 
 
 def main():
-    model = CustomTrainer(cfg='./configs/exp3.10_vit_l_16.yaml')
+    model = CustomTrainer(cfg='./configs/exp3.13_swin_v2_b.yaml')
     model.train()
 
     # save_dir = ''
@@ -14,4 +14,4 @@
 
 
 if __name__ == '__main__':
-    main()
\ No newline at end of file
+    main()
Index: tools/rawdata_crop.m
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>%% 依据需要的时间来分割大数据文件\r\nclc;\r\nclear;\r\nclose all;\r\n\r\nfs = 100e6;                     % 输入采样率\r\nfftpoint = 8192;\r\ntime_sec = 0.3;                   % 需要的分割时间/s\r\ndataform = 'float32';           % 输入的数据类型\r\nbyte_per = 4;                   % 该数据类型占字节数\r\ndatalength = time_sec*fs*byte_per*2;       % 读取数据的长度，单位是字节(时间*采样率*每个数据占字节*iq)\r\nfile_input =\"E:\\Drone_dataset\\RFUAV\\exp3\\rawdata\\FLYSKY_FS_I6X.iq\";% 输入路径\r\n[filepath, name, ~] = fileparts(file_input); % 获取路径、文件名和后缀名，在原路径创建文件夹存放分割后数据\r\nfilepath = filepath + '\\' + name;\r\n\r\nif ~exist(filepath,\"dir\")\r\n    mkdir(filepath);\r\nelse\r\n    disp(\"文件夹已经存在!\");\r\nend\r\n\r\n% 读取文件,获取大小\r\nfp = fopen(file_input, 'rb'); \r\nfseek(fp, 0, 1);\r\nfileSize = ftell(fp);\r\nfclose(fp);\r\nreadtime = ceil(fileSize/datalength);\r\n\r\n%% 分次读取文件保存\r\nfor i =1:readtime\r\n    tic\r\n    fp = fopen(file_input, 'rb'); \r\n    fseek(fp,(i-1)*datalength,-1);\r\n    data = fread(fp,datalength/4,dataform);\r\n    fclose(fp);\r\n    newFile = fullfile(filepath, name + '_' + num2str(i*2-2) + '-' + num2str(i*2) + 's.iq'); % 生成新的文件路径和文件名\r\n    fp_write = fopen(newFile,\"wb+\");\r\n    fwrite(fp_write,data,dataform);\r\n    fclose(fp_write);\r\n    toc\r\nend
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tools/rawdata_crop.m b/tools/rawdata_crop.m
--- a/tools/rawdata_crop.m	
+++ b/tools/rawdata_crop.m	
@@ -5,13 +5,14 @@
 
 fs = 100e6;                     % 输入采样率
 fftpoint = 8192;
-time_sec = 0.3;                   % 需要的分割时间/s
+time_sec = 1;                   % 需要的分割时间/s
 dataform = 'float32';           % 输入的数据类型
 byte_per = 4;                   % 该数据类型占字节数
 datalength = time_sec*fs*byte_per*2;       % 读取数据的长度，单位是字节(时间*采样率*每个数据占字节*iq)
-file_input ="E:\Drone_dataset\RFUAV\exp3\rawdata\FLYSKY_FS_I6X.iq";% 输入路径
+file_input ="E:\Drone_dataset\RFUAV\rawdata\DEVENTION DEVO\DEVENTION_DEVO_10-duima-60db_2440m_100m(1).iq";% 输入路径
 [filepath, name, ~] = fileparts(file_input); % 获取路径、文件名和后缀名，在原路径创建文件夹存放分割后数据
 filepath = filepath + '\' + name;
+name = "pack1"
 
 if ~exist(filepath,"dir")
     mkdir(filepath);
@@ -33,7 +34,7 @@
     fseek(fp,(i-1)*datalength,-1);
     data = fread(fp,datalength/4,dataform);
     fclose(fp);
-    newFile = fullfile(filepath, name + '_' + num2str(i*2-2) + '-' + num2str(i*2) + 's.iq'); % 生成新的文件路径和文件名
+    newFile = fullfile(filepath, name + '_' + num2str(time_sec*(i-1)) + '-' + num2str(time_sec*i) + 's.iq'); % 生成新的文件路径和文件名
     fp_write = fopen(newFile,"wb+");
     fwrite(fp_write,data,dataform);
     fclose(fp_write);
Index: test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\nimport shutil\r\n\r\n\r\ndef main():\r\n    or_path = 'E:/Drone_dataset/RFUAV/augmentation_exp1_MethodSelect/benchmark_or/'\r\n    target_path = 'E:/Drone_dataset/RFUAV/augmentation_exp1_MethodSelect/temp/'\r\n    drone_type = os.listdir(or_path)\r\n    for drone in drone_type:\r\n        snr = os.listdir(os.path.join(or_path, drone))\r\n        for snr_value in snr:\r\n            data_path = os.path.join(or_path, drone, snr_value, 'hot')\r\n            stft_ps = os.listdir(data_path)\r\n            for stft_p in stft_ps:\r\n                imgs = os.listdir(os.path.join(data_path, stft_p))\r\n                for img in imgs:\r\n                    ensure_directory_exists(os.path.join(target_path, snr_value, stft_p, drone))\r\n                    shutil.copy(os.path.join(data_path, stft_p, img), os.path.join(target_path, snr_value, stft_p, drone))\r\n\r\n\r\ndef ensure_directory_exists(directory_path):\r\n\r\n    if not os.path.exists(directory_path):\r\n        os.makedirs(directory_path)\r\n        print(f\"目录已创建: {directory_path}\")\r\n    else:\r\n        print(f\"目录已存在: {directory_path}\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()
===================================================================
diff --git a/test.py b/test.py
--- a/test.py	
+++ b/test.py	
@@ -1,5 +1,6 @@
 import os
 import shutil
+from torch import nn
 
 
 def main():
@@ -25,7 +26,7 @@
         print(f"目录已创建: {directory_path}")
     else:
         print(f"目录已存在: {directory_path}")
-
+    nn.Transformer
 
 if __name__ == '__main__':
     main()
\ No newline at end of file
Index: configs/exp3.9_vit_b_32.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>train: E:\\Drone_dataset\\RFUAV\\augmentation_exp2_allDrone\\dataset_aug\\train  # 数据集路径\r\nval: E:\\Drone_dataset\\RFUAV\\augmentation_exp2_allDrone\\dataset_aug\\valid  # 数据集路径\r\nsave_path: E:\\Drone_dataset\\RFUAV\\augmentation_exp2_allDrone\\exp\\8.vit_b_16\r\nmodel : vit_b_32\r\nweights: None\r\nbatch_size: 32\r\nimage_size: 224\r\nnum_classes: 37\r\nclass_names: [\r\n        'DAUTEL EVO nano',\r\n        'DEVENTION DEVO',\r\n        'DJI AVATA2',\r\n        'DJI FPV COMBO',\r\n        'DJI MAVIC3 PRO',\r\n        'DJI MINI3',\r\n        'DJI MINI4 PRO',\r\n        'FLYSKY EL 18',\r\n        'FLYSKY FS 16X',\r\n        'FLYSKY NV 14',\r\n        'FRSKY-X9DP2019',\r\n        'FRSKY-X14',\r\n        'FRSKY-X20R',\r\n        'FUTABA-T10J',\r\n        'FUTABA-T145G',\r\n        'FUTABA-T16IZ',\r\n        'FUTABA-T18SZ',\r\n        'Herelink-Hx4',\r\n        'JR PROPO XG7',\r\n        'JR PROPO XG14',\r\n        'JUMPER-T14',\r\n        'JUMPER-TProV2',\r\n        'Radiolink AT9S Pro',\r\n        'Radiolink AT10 II',\r\n        'RadioMaster BOXER',\r\n        'RadioMaster TX16S',\r\n        'SIYI FT24',\r\n        'SIYI MK15',\r\n        'SIYI MK32',\r\n        'SKYDROID-H12',\r\n        'SKYDROID-T10',\r\n        'WFLY ET10',\r\n        'WFLY ET16S',\r\n        'WFLY WFTO9SII',\r\n        'YunZhuo-H12',\r\n        'YunZhuo-H16',\r\n        'YunZhuo-H30',\r\n]\r\ndevice: 'cuda'\r\nnum_epochs: 150\r\nshuffle: True\r\nlr: 0.00001\r\noptimizer: None\r\n
===================================================================
diff --git a/configs/exp3.9_vit_b_32.yaml b/configs/exp3.9_vit_b_32.yaml
--- a/configs/exp3.9_vit_b_32.yaml	
+++ b/configs/exp3.9_vit_b_32.yaml	
@@ -1,6 +1,6 @@
 train: E:\Drone_dataset\RFUAV\augmentation_exp2_allDrone\dataset_aug\train  # 数据集路径
 val: E:\Drone_dataset\RFUAV\augmentation_exp2_allDrone\dataset_aug\valid  # 数据集路径
-save_path: E:\Drone_dataset\RFUAV\augmentation_exp2_allDrone\exp\8.vit_b_16
+save_path: E:\Drone_dataset\RFUAV\augmentation_exp2_allDrone\exp\9.vit_b_32
 model : vit_b_32
 weights: None
 batch_size: 32
